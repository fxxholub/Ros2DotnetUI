@page "/joystick"
@using Ros2DotnetUI.Library

<PageTitle>Joystick</PageTitle>

<h1>Joystick Documentation</h1>

<p>Joystick is optimized for PC/Mac and phone browsers.</p>
<p>it is meant for industry usage, thus random swipe gesture will not activate the joystick. User must press and hold the joystick.</p>
<p>Joystick also emits start and stop events, apart from move event with X and Y (%) coordinates.</p>

<hr />

<h2>Dependencies</h2>
<p>Add the following scripts the the <code>head</code> of <code>index.html</code></p>
<pre><code>
&lt;script src="_content/Ros2DotnetUI.Library/js/jquery-3.7.1.min.js"&gt;&lt;/script&gt;
&lt;script src="_content/Ros2DotnetUI.Library/js/createjs.min.js"&gt;&lt;/script&gt;
&lt;script src="_content/Ros2DotnetUI.Library/js/hammer.min.js"&gt;&lt;/script&gt;
</code></pre>

<hr />

<h2>Basic usage</h2>

<pre><code>
&lt;Joystick
    OnJoystickStart="HandleJoystickStart"
    OnJoystickMove="HandleJoystickMove"
    OnJoystickStop="HandleJoystickStop"&gt;
&lt;/Joystick&gt;

@@code {
    private string Output { get; set; } = "";

    private void HandleJoystickStart()
    {
        Output += "Joystick Started\n";
    }

    private void HandleJoystickMove((float X, float Y) position)
    {
        Output += $"Joystick Moved: X = {position.X}, Y = {position.Y}\n";
    }

    private void HandleJoystickStop()
    {
        Output += "Joystick Stopped\n";
    }
}
</code></pre>

<Joystick
    OnJoystickStart="HandleJoystickStartBasic"
    OnJoystickMove="HandleJoystickMoveBasic"
    OnJoystickStop="HandleJoystickStopBasic">
</Joystick>

<h3>Output:</h3>
<textarea id="joystickOutputBasic" style="width: 100%; height: 100px;" readonly>@BasicOutput</textarea>

<hr />

<h2>Advanced Features</h2>

<h3>1. Adding Icons</h3>

<pre><code>
&lt;Joystick&gt;
    &lt;TopIcon&gt;&lt;span&gt;▲&lt;/span&gt;&lt;/TopIcon&gt;
    &lt;BottomIcon&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/BottomIcon&gt;
    &lt;LeftIcon&gt;&lt;span&gt;◄&lt;/span&gt;&lt;/LeftIcon&gt;
    &lt;RightIcon&gt;&lt;span&gt;►&lt;/span&gt;&lt;/RightIcon&gt;
&lt;/Joystick&gt;
</code></pre>

<Joystick>
    <TopIcon><span>▲</span></TopIcon>
    <BottomIcon><span>▼</span></BottomIcon>
    <LeftIcon><span>◄</span></LeftIcon>
    <RightIcon><span>►</span></RightIcon>
</Joystick>

<h3>2. Disabling Axes</h3>
<p>Axis can be disabled by double clicking at the appropriate icon.</p>
<p>This behavior can be disabled with <code>DisabledToggleX=true</code> and <code>DisabledToggleY=true</code>.</p>

<Joystick
    OnJoystickStart="HandleJoystickStartAdvanced"
    OnJoystickMove="HandleJoystickMoveAdvanced"
    OnJoystickStop="HandleJoystickStopAdvanced">
    <TopIcon><span>▲</span></TopIcon>
    <BottomIcon><span>▼</span></BottomIcon>
    <LeftIcon><span>◄</span></LeftIcon>
    <RightIcon><span>►</span></RightIcon>
</Joystick>

<h3>Output:</h3>
<textarea id="joystickOutputAdvanced" style="width: 100%; height: 100px;" readonly>@AdvancedOutput</textarea>

@code {
    private string BasicOutput { get; set; } = "";
    private string AdvancedOutput { get; set; } = "";

    private void HandleJoystickStartBasic()
    {
        BasicOutput += "Joystick Started\n";
    }

    private void HandleJoystickMoveBasic((float X, float Y) position)
    {   BasicOutput += $"Joystick Moved: X = {position.X}, Y = {position.Y}\n";
    }

    private void HandleJoystickStopBasic()
    {
        BasicOutput += "Joystick Stopped\n";
    }

    private void HandleJoystickStartAdvanced()
    {
        AdvancedOutput += "Joystick Started\n";
    }

    private void HandleJoystickMoveAdvanced((float X, float Y) position)
    {
        AdvancedOutput += $"Joystick Moved: X = {position.X}, Y = {position.Y}\n";
    }

    private void HandleJoystickStopAdvanced()
    {
        AdvancedOutput += "Joystick Stopped\n";
    }
}
